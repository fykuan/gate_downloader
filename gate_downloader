#!/usr/bin/env python
# -*- coding: utf-8 -*-
import argparse
import json
import os
import re
import subprocess
import sys
import urllib2


def get_title(url):
    """[Get anime title from animme root url]

    Arguments:
        url {[string]} -- [Anime root url]

    Returns:
        [string] -- [Anime title]
    """
    try:
        response = urllib2.urlopen("%s" % url)
        html = response.read()

        result = re.findall(r"<title>(.*?)\s-", html)
        return result[0]
    except Exception as e:
        print e


def get_urls(url):
    """[Get all video urls for specific anime]

    Arguments:
        url {[string]} -- [root url for each anime]

    Returns:
        [list] -- [video urls for each episode]
    """
    # phase 1
    try:
        response = urllib2.urlopen("%s" % url)
        html = response.read()

        result = re.findall(r"<div\sid=\"tab-......-[0-9]+\">(<div><a\shref|<span\shref)=\"(.*?)\"", html)
        pages = []
        for r in result:
            pages.append(r[1])
    except Exception as e:
        print e

    # phase 2
    video_url = []
    for i, r in enumerate(pages):
        try:
            request = urllib2.Request(r)
            request.add_header('User-Agent', 'Mozilla/5.0')
            response = urllib2.urlopen(request)
            html = response.read()
            result = re.findall(r"var\splaylist\s=\s(\[.*?\]);", html, re.S)
            j = json.loads(result[0])
            size = len(j[0]['sources'])
            type = j[0]['sources'][size - 1]['type']
            max = j[0]['sources'][size - 1]['file']
            video_url.append(dict({'url': max, 'type': type}))
        except Exception as e:
            print e
    return video_url


def download_by_aria2c(title, video_list):
    """[Download all video files in title[] using aria2c, and named them by anime title]

    Arguments:
        title {[string]} -- [Anime title]
        video_list {[string]} -- [list of all video files]
    """

    print "[Downloading] %s" % (title)
    for i, l in enumerate(video_list):
        try:
            if l['type'] == "video/mp4":
                ext = "mp4"
            else:
                print "unknown file extendsion: %s" % (l['type'])

            if not os.path.exists("%s" % title):
                os.makedirs(title)

            process = subprocess.Popen(
                "aria2c '%s' -s10 -k2m -o '%s/%s[%02d].%s'" % (l['url'], title.decode('utf-8'), title.decode('utf-8'), i + 1, ext), shell=True
            )
            process.wait()
        except KeyboardInterrupt:
            print "Interrupted!!"
            sys.exit(0)
        except Exception as e:
            print e


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Get URLs for Animes")
    parser.add_argument("--base", "-b", required=True)
    args = parser.parse_args()

    title = get_title(args.base)

    download_by_aria2c(title, get_urls(args.base))
